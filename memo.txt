like_data.yml, player_data.yml は空っぽ
depend: HolographicDisplays, Vault, Essentials
リファクタリングした上で機能追加

・Likeホログラムに対する右クリックの操作
→HolographicDisplaysが左右の判定をサポートしていないため左クリックでも出来る状態に

・/likeop deleteplayer [player]
→playerが作成したLikeホログラムを全て削除する

・/likeop deleteworld [world]
→world内のLikeホログラムを全て削除する

・/likeop changeowner [like_id] [new_owner]
→like_idと一致するLikeホログラムのオーナーをnew_ownerに変更する(この機能をGUI化するとチャット欄も使用する
必要が出てくるためコマンドだけの機能としました)

・/likeop changedata [player] [new_owner]
→playerが作成したLikeホログラムのオーナーを全てnew_ownerに変更する

・/likeop reload
→コンフィグを再読み込みする

コマンド一覧

・/like (パーミッション: like.like)
- /like create
- /like list 
- /like list me
- /like status

・/likec (パーミッション: like.like)
- /likec

・/likel (パーミッション: like.like)
- /likel
- /likel me

・/likes (パーミッション: like.like)
- /likes

・/likeop (パーミッション: like.likeop)
- /likeop delete [like_id]
- /likeop move [like_id]
- /likeop deleteplayer [player]
- /likeop deleteworld [world]
- /likeop changeowner [like_id] [new_owner]
- /likeop changedata [player] [new_owner]
- /likeop reload

抜粋

Likeホログラムを作成出来るワールドの設定、設置数制限、GUI内のアイテムの見た目などはコンフィグから設定出来るようにしました
書き換え→/likeop reloadで適用して頂ければ問題無いです
https://github.com/amata1219/LikeLike/blob/master/config.yml

後もう一つ、招待ボタンはMinecraftの仕様上、一般プレイヤーが使えるコマンドを使ってTPさせなければならないため、/likeコマンドを用いています
/like [like_id]とすると招待ボタン関係無くTP出来てしまうので、トークン(プラグイン読み込み毎に再生成)を用意し
招待ボタンとトークンを合わせてクライアント側に送信して、/like [トークン] [like_id]の様な形でトークンが一致すればTP、といった仕組みにしています

/like create(or /likec) :立っている地点にLikeホログラムを作成
Likeホログラムを右クリック→お気に入りに登録
LikeホログラムをShift+右クリック→そのLike詳細や編集画面
編集は自分のものであればLike名の編集や削除等、他人のものはお気に入り解除など
問題のあるLikeが生まれる事もあると思うのでAdmin用管理画面もあると助かります
/like list(or /likel) :今までお気に入りをしたもののリストを表示
お気に入りをクリックするとその地点にワープし、moneyをお気に入りを作成した方にpayする
/like invite(or /likei) :お気に入りリストから招待ボタンを作成
周囲にいるユーザーに対してチャット欄にその地点へのワープボタンを送信する。
ワープボタンを作成する際にmoneyをお気に入り作成した方にpayする。(ワープにコストは設けない)